/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package exercice

import io.kotest.assertions.withClue
import io.kotest.core.spec.style.FreeSpec
import io.kotest.matchers.shouldBe

class AppSpec : FreeSpec({
    "Example 1" {
        computeCost(3, intArrayOf(2, 2, 3)) shouldBe intArrayOf(0, 1, 2)
    }

    "Example 2" {
        computeCost(5, intArrayOf(1, 2, 3, 4, 5)) shouldBe intArrayOf(0, 1, 2, 3, 4)
    }

    "Example 3" {
        computeCost(7, intArrayOf(4, 4, 4, 4, 7, 7, 7)) shouldBe intArrayOf(0, 1, 2, 1, 2, 3, 3)
    }

    "Example 4" {
        val result = computeCost(
            98,
            intArrayOf(
                17,
                17,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                57,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                87,
                90,
                90,
                90,
                90,
                90,
                90,
                90,
                90,
                90,
                90,
                90,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                92,
                95,
                95,
                95,
                95,
                95,
                97,
                98,
                98
            )
        )
        val expected = intArrayOf(
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            8,
            7,
            6,
            5,
            4,
            3,
            2,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            21,
            20,
            19,
            18,
            17,
            16,
            15,
            14,
            13,
            12,
            11,
            10,
            9,
            8,
            7,
            6,
            5,
            4,
            3,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            18,
            17,
            16,
            15,
            14,
            13,
            12,
            11,
            10,
            9,
            8,
            7,
            6,
            5,
            4,
            3,
            4,
            4,
            5,
            6,
            5,
            6,
            7,
            8,
        )

        result.size shouldBe expected.size
        result.zip(expected).forEachIndexed { index, (r, e) ->
            println("$index: $r | $e")
            withClue(index) {
                r shouldBe e
            }
        }
    }
})
